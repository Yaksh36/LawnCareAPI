version: '3.7'
services:
  app-server:
    image: springboot-container-c
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080"
    restart: always
    depends_on:
      - db
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://db:3306/lawn_care?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=false&maxReconnects=10"
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "root"
      SPRING_RABBITMQ_HOST: rabbitmq
      REDIS_HOST: redis
      REDIS_PASSWORD: test

  consumer-server:
    image: consumer_server
    build:
      context: ./lawn_care_consumer
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - app-server
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq

  db:
    container_name: db
    image: mysql:latest
    ports:
      - "4002:3306"
    restart: always
    environment:
      MYSQL_DATABASE: lawn_care
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - C:/Users/Yaksh Patel/Desktop/LawnCare/src/main/java/patel/yaksh/lawn/mysql:/var/lib/mysql
    command: mysqld

  redis:
    image: redis
    command: redis-server --requirepass test
    container_name: exercise-5-3-redis
    volumes:
      - ./redis/data:/data
    ports:
      - 6379:6379

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server
    ports:
      - "4000:4000"

  rabbitmq:
    image: library/rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro

# Volumes
#volumes:
 # db-data:
#  volumes:
#    - C:\temp\MessageQueueExample\docker\rabbitmq\data:/var/lib/rabbitmq/mnesia
